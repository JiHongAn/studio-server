generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id           String     @id @default(uuid()) @db.VarChar(36)
  email        String     @unique @db.VarChar(36)
  password     String     @db.VarChar(100)
  nickname     String     @db.VarChar(12)
  refreshToken String?    @db.VarChar(500)
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  projects     projects[]
}

model projects {
  id        String    @id @default(uuid()) @db.VarChar(36)
  userId    String    @map("user_id") @db.VarChar(36)
  name      String    @db.VarChar(20)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  users     users     @relation(fields: [userId], references: [id])
  matches   matches[]
}

model matches {
  id        String   @id @default(uuid()) @db.VarChar(36)
  projectId String   @map("project_id") @db.VarChar(36)
  name      String   @db.VarChar(20)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  projects  projects @relation(fields: [projectId], references: [id])
  scenes    scenes[]
}

model scenes {
  id        String    @id @default(uuid()) @db.VarChar(36)
  matchId   String    @map("match_id") @db.VarChar(36)
  name      String    @db.VarChar(20)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  matches   matches   @relation(fields: [matchId], references: [id])
  objects   objects[]
}

model objects {
  id       String @id @default(uuid()) @db.VarChar(36)
  sceneId  String @map("scene_id") @db.VarChar(36)
  sequence Int
  type     String @db.VarChar(50)
  props    Json?
  scenes   scenes @relation(fields: [sceneId], references: [id])

  @@unique([sceneId, sequence])
}
